{"remainingRequest":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sekiguchikeita/Desktop/sinapse_prototype/src/views/App.vue?vue&type=template&id=e920d152&scoped=true&","dependencies":[{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/src/views/App.vue","mtime":1598506599000},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1598501639569},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js","mtime":1598501639569}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\"h1\", { staticClass: \"title\" }, [_vm._v(\"Flowchart Vue\")]),\n      _c(\"div\", { attrs: { id: \"toolbar\" } }, [\n        _c(\n          \"button\",\n          {\n            on: {\n              click: function($event) {\n                _vm.$refs.chart.add({\n                  id: +new Date(),\n                  x: 10,\n                  y: 10,\n                  thumbnail: \"https://placehold.jp/150x100.png\",\n                  url: \"\",\n                  name: \"Title\",\n                  summary: \"Summary\"\n                })\n              }\n            }\n          },\n          [_vm._v(\"\\n      Add(Double-click canvas)\\n    \")]\n        ),\n        _c(\n          \"button\",\n          {\n            on: {\n              click: function($event) {\n                return _vm.$refs.chart.remove()\n              }\n            }\n          },\n          [_vm._v(\"Delete(Del)\")]\n        ),\n        _c(\n          \"button\",\n          {\n            on: {\n              click: function($event) {\n                return _vm.$refs.chart.editCurrent()\n              }\n            }\n          },\n          [_vm._v(\"\\n      Edit(Double-click node)\\n    \")]\n        ),\n        _c(\n          \"button\",\n          {\n            on: {\n              click: function($event) {\n                return _vm.$refs.chart.save()\n              }\n            }\n          },\n          [_vm._v(\"Save\")]\n        )\n      ]),\n      _c(\"flowchart\", {\n        ref: \"chart\",\n        attrs: {\n          nodes: _vm.nodes,\n          connections: _vm.connections,\n          readonly: false,\n          render: _vm.render\n        },\n        on: {\n          editnode: _vm.handleEditNode,\n          dblclick: _vm.handleDblClick,\n          editconnection: _vm.handleEditConnection,\n          save: _vm.handleChartSave\n        }\n      }),\n      _c(\"node-dialog\", {\n        attrs: { visible: _vm.nodeDialogVisible, node: _vm.nodeForm.target },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.nodeDialogVisible = $event\n          },\n          \"update:node\": function($event) {\n            return _vm.$set(_vm.nodeForm, \"target\", $event)\n          }\n        }\n      }),\n      _c(\"connection-dialog\", {\n        attrs: {\n          visible: _vm.connectionDialogVisible,\n          connection: _vm.connectionForm.target,\n          operation: _vm.connectionForm.operation\n        },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.connectionDialogVisible = $event\n          },\n          \"update:connection\": function($event) {\n            return _vm.$set(_vm.connectionForm, \"target\", $event)\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
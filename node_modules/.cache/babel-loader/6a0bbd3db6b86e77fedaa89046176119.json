{"remainingRequest":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sekiguchikeita/Desktop/sinapse_prototype/src/components/ConnectionDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/src/components/ConnectionDialog.vue","mtime":1598506599000},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js","mtime":1598501423176},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js","mtime":1598501639569}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../assets/modal.css\";\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    connection: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      connectionForm: {\n        type: null,\n        sourceId: null,\n        sourcePosition: null,\n        destinationId: null,\n        destinationPosition: null,\n        name: null,\n        expression: null\n      }\n    };\n  },\n  methods: {\n    handleClickSaveConnection: function () {\n      var _handleClickSaveConnection = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$emit('update:visible', false);\n                this.$emit('update:connection', Object.assign(this.connection, {\n                  name: this.connectionForm.name,\n                  type: this.connectionForm.type,\n                  expression: this.connectionForm.expression\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleClickSaveConnection() {\n        return _handleClickSaveConnection.apply(this, arguments);\n      }\n\n      return handleClickSaveConnection;\n    }(),\n    handleClickCancelSaveConnection: function () {\n      var _handleClickCancelSaveConnection = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$emit('update:visible', false);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleClickCancelSaveConnection() {\n        return _handleClickCancelSaveConnection.apply(this, arguments);\n      }\n\n      return handleClickCancelSaveConnection;\n    }()\n  },\n  watch: {\n    connection: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          return;\n        }\n\n        this.connectionForm.id = val.id;\n        this.connectionForm.type = val.type;\n        this.connectionForm.name = val.name;\n        this.connectionForm.expression = val.expression;\n      }\n    }\n  }\n};",{"version":3,"sources":["ConnectionDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,cAAA,EAAA,IAHA;AAIA,QAAA,aAAA,EAAA,IAJA;AAKA,QAAA,mBAAA,EAAA,IALA;AAMA,QAAA,IAAA,EAAA,IANA;AAOA,QAAA,UAAA,EAAA;AAPA;AADA,KAAA;AAWA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,yBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,qBAAA,KAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,UAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,cAAA,CAAA,IADA;AAEA,kBAAA,IAAA,EAAA,KAAA,cAAA,CAAA,IAFA;AAGA,kBAAA,UAAA,EAAA,KAAA,cAAA,CAAA;AAHA,iBAAA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA,IAAA,+BATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,qBAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAxBA;AAqCA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,YAAA,CAAA,GAAA,EAAA;AAAA;AAAA;;AACA,aAAA,cAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACA,aAAA,cAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,aAAA,cAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,aAAA,cAAA,CAAA,UAAA,GAAA,GAAA,CAAA,UAAA;AACA;AARA;AADA;AArCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\">\n            <div class=\"header\">\n                <span>Edit</span>\n            </div>\n            <div class=\"body\">\n                <label for=\"name\">Name</label>\n                <input id=\"name\" class=\"form-control\" v-model=\"connectionForm.name\"/>\n                <label for=\"type\">Type</label>\n                <select id=\"type\" class=\"form-control\" v-model=\"connectionForm.type\">\n                    <option :key=\"'connection-type-' + item.id\"\n                            v-for=\"item in [ { name: 'Pass', id: 'pass' }, { name: 'Reject', id: 'reject' } ]\"\n                            :value=\"item.id\">\n                        {{item.name}}\n                    </option>\n                </select>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelSaveConnection\">Cancel</button>\n                <button @click=\"handleClickSaveConnection\">Ok</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      connection: {\n        type: Object,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        connectionForm: {\n          type: null,\n          sourceId: null,\n          sourcePosition: null,\n          destinationId: null,\n          destinationPosition: null,\n          name: null,\n          expression: null,\n        },\n      };\n    },\n    methods: {\n      async handleClickSaveConnection() {\n        this.$emit('update:visible', false);\n        this.$emit('update:connection', Object.assign(this.connection, {\n          name: this.connectionForm.name,\n          type: this.connectionForm.type,\n          expression: this.connectionForm.expression,\n        }));\n      },\n      async handleClickCancelSaveConnection() {\n        this.$emit('update:visible', false);\n      },\n    },\n    watch: {\n      connection: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.connectionForm.id = val.id;\n          this.connectionForm.type = val.type;\n          this.connectionForm.name = val.name;\n          this.connectionForm.expression = val.expression;\n        },\n      },\n    },\n  };\n</script>\n"],"sourceRoot":"src/components"}]}
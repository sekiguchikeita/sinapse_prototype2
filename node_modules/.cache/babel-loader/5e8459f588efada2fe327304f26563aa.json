{"remainingRequest":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/sekiguchikeita/Desktop/sinapse_prototype/src/utils/math.js","dependencies":[{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/src/utils/math.js","mtime":1598506599000},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js","mtime":1598501423176},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1598501658396}],"contextDependencies":[],"result":["function distanceOfPointToLine(beginX, beginY, endX, endY, ptX, ptY) {\n  var k = (endY - beginY || 1) / (endX - beginX || 1);\n  var b = beginY - k * beginX;\n  return Math.abs(k * ptX - ptY + b) / Math.sqrt(k * k + 1);\n}\n\nfunction between(num1, num2, num) {\n  return num > num1 && num < num2 || num > num2 && num < num1;\n}\n\nfunction approximatelyEquals(n, m) {\n  return Math.abs(m - n) <= 3;\n}\n\nfunction getEdgeOfPoints(points) {\n  var minX = points.reduce(function (prev, point) {\n    return point.x < prev ? point.x : prev;\n  }, Infinity);\n  var maxX = points.reduce(function (prev, point) {\n    return point.x > prev ? point.x : prev;\n  }, 0);\n  var minY = points.reduce(function (prev, point) {\n    return point.y < prev ? point.y : prev;\n  }, Infinity);\n  var maxY = points.reduce(function (prev, point) {\n    return point.y > prev ? point.y : prev;\n  }, 0);\n  return {\n    start: {\n      x: minX,\n      y: minY\n    },\n    end: {\n      x: maxX,\n      y: maxY\n    }\n  };\n}\n\nfunction pointRectangleIntersection(p, r) {\n  return p.x > r.start.x && p.x < r.end.x && p.y > r.start.y && p.y < r.end.y;\n}\n\nfunction roundTo20(number) {\n  return number < 20 ? 20 : number;\n}\n\nexport { distanceOfPointToLine, between, approximatelyEquals, getEdgeOfPoints, pointRectangleIntersection, roundTo20 };",{"version":3,"sources":["/Users/sekiguchikeita/Desktop/sinapse_prototype/src/utils/math.js"],"names":["distanceOfPointToLine","beginX","beginY","endX","endY","ptX","ptY","k","b","Math","abs","sqrt","between","num1","num2","num","approximatelyEquals","n","m","getEdgeOfPoints","points","minX","reduce","prev","point","x","Infinity","maxX","minY","y","maxY","start","end","pointRectangleIntersection","p","r","roundTo20","number"],"mappings":"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","sourcesContent":["function distanceOfPointToLine(beginX, beginY, endX, endY, ptX, ptY) {\n  const k = (endY - beginY || 1) / (endX - beginX || 1);\n  const b = beginY - k * beginX;\n  return Math.abs(k * ptX - ptY + b) / Math.sqrt(k * k + 1);\n}\n\nfunction between(num1, num2, num) {\n  return (num > num1 && num < num2) || (num > num2 && num < num1);\n}\n\nfunction approximatelyEquals(n, m) {\n  return Math.abs(m - n) <= 3;\n}\n\nfunction getEdgeOfPoints(points) {\n  let minX = points.reduce((prev, point) => {\n    return point.x < prev ? point.x : prev;\n  }, Infinity);\n  let maxX = points.reduce((prev, point) => {\n    return point.x > prev ? point.x : prev;\n  }, 0);\n  let minY = points.reduce((prev, point) => {\n    return point.y < prev ? point.y : prev;\n  }, Infinity);\n  let maxY = points.reduce((prev, point) => {\n    return point.y > prev ? point.y : prev;\n  }, 0);\n  return {start: {x: minX, y: minY}, end: {x: maxX, y: maxY}};\n}\n\nfunction pointRectangleIntersection(p, r) {\n  return p.x > r.start.x && p.x < r.end.x && p.y > r.start.y && p.y < r.end.y;\n}\n\nfunction roundTo20(number) {\n  return number < 20 ? 20 : number;\n}\n\nexport {\n  distanceOfPointToLine,\n  between,\n  approximatelyEquals,\n  getEdgeOfPoints,\n  pointRectangleIntersection,\n  roundTo20,\n};\n"]}]}
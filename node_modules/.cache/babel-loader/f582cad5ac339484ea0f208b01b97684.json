{"remainingRequest":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sekiguchikeita/Desktop/sinapse_prototype/src/views/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/src/views/App.vue","mtime":1598506599000},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/babel-loader/lib/index.js","mtime":1598501423176},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/cache-loader/dist/cjs.js","mtime":1598501629025},{"path":"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/vue-loader/lib/index.js","mtime":1598501639569}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/sekiguchikeita/Desktop/sinapse_prototype/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable no-unused-vars */\nimport ConnectionDialog from \"../components/ConnectionDialog\";\nimport NodeDialog from \"../components/NodeDialog\";\nimport Flowchart from \"../components/flowchart/Flowchart\";\nimport * as d3 from \"d3\";\nimport { roundTo20 } from \"../utils/math\";\nexport default {\n  components: {\n    ConnectionDialog: ConnectionDialog,\n    NodeDialog: NodeDialog,\n    Flowchart: Flowchart\n  },\n  data: function data() {\n    return {\n      nodes: [{\n        id: 1,\n        x: 200,\n        y: 50,\n        thumbnail: \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-1.2.2&w=1200&mark=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D380%26txt%3DDocker%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2581%25E3%2582%2581%25E3%2581%25A1%25E3%2582%2583%25E3%2581%258F%25E3%2581%25A1%25E3%2582%2583%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D54%26txt-clip%3Dellipsis%26txt-align%3Dcenter%252Cmiddle%26s%3Da74a6782c81bee821aa421a1037a1cc0&mark-align=center%2Cmiddle&blend=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D500%26txt%3D%2540SatoshiSobue%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D45%26txt-align%3Dright%252Cbottom%26s%3Dca9d81597f6bcfd55d58a95dc4c5f445&blend-align=center%2Cmiddle&blend-mode=normal&s=6d406ff15d17893a52ab77ba3ebd9d33\",\n        url: 'https://qiita.com/SatoshiSobue/items/a612ebbb3a9242c09db5',\n        name: \"Dockerとはどういったものなのか、めちゃくちゃ丁寧に説明してみる - Qiita\",\n        summary: \"仮想化などDockerの周辺知識も含めて丁寧に解説されている。\"\n      }, {\n        id: 2,\n        x: 200,\n        y: 300,\n        thumbnail: \"https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png\",\n        url: 'https://dev.to/mizuki04/tips-docker-5bfj',\n        name: \"[Tips] 中銀カプセルタワービル=Docker説 - DEV\",\n        summary: \"Dockerの概要が面白い例えで紹介されている。イメージをつかめる。\t\"\n      }, // {\n      //   id: 3,\n      //   x: 340,\n      //   y: 130,\n      //   name: \"Custom size\",\n      //   thumbnail: \"operation\",\n      //   approvers: [{ id: 1, name: \"Joyce\" }],\n      //   // width: 120,\n      //   // height: 40,\n      // },\n      {\n        id: 4,\n        x: 50,\n        y: 700,\n        thumbnail: \"https://img-a.udemycdn.com/course/480x270/3207931_c941.jpg\",\n        url: 'https://www.udemy.com/course/aidocker/',\n        name: \"米国AI開発者がゼロから教えるDocker講座\",\n        // approvers: [{ id: 2, name: \"Allen\" }],\n        summary: \"インプットしているだけではわからないので、手を動かして覚える。過去一わかりやすい動画。\t\"\n      }, {\n        id: 5,\n        x: 400,\n        y: 700,\n        thumbnail: \"https://i.ytimg.com/vi/Fq1PH0Gwi8I/hqdefault.jpg\",\n        url: 'https://www.youtube.com/watch?v=Fq1PH0Gwi8I',\n        name: \"【rails環境構築】docker + rails + mysql で環境構築（初心者でも30分で完了！）\",\n        // approvers: [{ id: 3, name: \"Teresa\" }],\n        summary: \"無料がいい方はこちら。\t\"\n      }],\n      connections: [{\n        // positionは矢印がつながっているコネクターの位置っぽい\n        source: {\n          id: 1,\n          position: \"bottom\"\n        },\n        destination: {\n          id: 2,\n          position: \"top\"\n        },\n        id: 1,\n        type: \"pass\",\n        name: \"たとえ話でイメージをつかむ\"\n      }, {\n        source: {\n          id: 2,\n          position: \"bottom\"\n        },\n        destination: {\n          id: 4,\n          position: \"top\"\n        },\n        id: 2,\n        type: \"pass\",\n        name: \"実際に手を動かす\"\n      }, {\n        source: {\n          id: 2,\n          position: \"bottom\"\n        },\n        destination: {\n          id: 5,\n          position: \"top\"\n        },\n        id: 3,\n        type: \"pass\",\n        name: \"実際に手を動かす\"\n      }],\n      nodeForm: {\n        target: null\n      },\n      connectionForm: {\n        target: null,\n        operation: null\n      },\n      nodeDialogVisible: false,\n      connectionDialogVisible: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    handleDblClick: function handleDblClick(position) {\n      this.$refs.chart.add({\n        id: +new Date(),\n        x: 10,\n        y: 10,\n        thumbnail: 'https://placehold.jp/150x100.png',\n        url: '',\n        name: 'Title',\n        summary: 'Summary'\n      });\n    },\n    handleChartSave: function () {\n      var _handleChartSave = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(nodes, connections) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function handleChartSave(_x, _x2) {\n        return _handleChartSave.apply(this, arguments);\n      }\n\n      return handleChartSave;\n    }(),\n    handleEditNode: function handleEditNode(node) {\n      this.nodeForm.target = node;\n      this.nodeDialogVisible = true;\n    },\n    handleEditConnection: function handleEditConnection(connection) {\n      this.connectionForm.target = connection;\n      this.connectionDialogVisible = true;\n    },\n    render: function render(g, node, isSelected) {\n      node.width = node.width || 400;\n      node.height = node.height || 200;\n      var borderColor = isSelected ? \"#666666\" : \"#bbbbbb\"; // // バイト数カウント関数を定義\n      // String.prototype.bytes = function () {\n      //   return(encodeURIComponent(this).replace(/%../g,\"x\").length);\n      // }\n      // function leftLinebreak(array){\n      //   let string = \"\";\n      //   array.forEach((t, i) =>{\n      //     string += `<tspan y=\"${i}em\" x=\"0em\">${t}</tspan>`;\n      //     string += `<tspan y=\"${i}em\" x=\"0em\">${t}</tspan>`;\n      //   });\n      //   return string;\n      // }\n      // image\n\n      g.append('foreignObject').attr(\"x\", node.x).attr(\"y\", node.y).style(\"width\", node.width * 3 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\").append('xhtml:div').style(\"width\", node.width * 3 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\") // .attr(\"class\", \"imgaaa\")\n      // .style(\"background-image\", \"url('https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\")\n      .style(\"background-image\", \"url(\".concat(node.thumbnail, \")\")).style(\"background-position\", \"center center\").style(\"background-size\", \"cover\").style(\"background-repeat\", \"no-repeat\").style(\"border-radius\", \"6px 0 0 0\").style(\"box-sizing\", \"border-box\") // .style(\"border-top\", \"1px solid #7CF8FD\")\n      // .style(\"border-left\", \"1px solid #7CF8FD\")\n      .style(\"border-top\", \"1px solid white\").style(\"border-left\", \"1px solid white\"); // .style(\"background-color\", \"red\")\n      // .append('img')\n      // .attr('src', 'https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\n      // .style(\"width\", node.width / 2 + \"px\")\n      // .style(\"height\", node.height / 2 + \"px\")\n      // .text(() => node.name)\n      // g.append(\"image\")\n      //   .attr(\"x\", node.x)\n      //   .attr(\"y\", node.y)\n      //   .attr('xlink:href', 'https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\n      //   .attr(\"preserveAspectRatio\", \"none\")\n      //   // .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      //   .style(\"width\", node.width / 2 + \"px\")\n      //   .style(\"height\", node.height / 2 + \"px\")\n      //   .attr(\"stroke\", borderColor)\n      //   .attr(\"class\", \"title\")\n      //   .style(\"height\", \"20px\")\n      //   .style(\"fill\", \"#f1f3f4\")\n      //   .style(\"stroke-width\", \"1px\")\n      //   .style(\"width\", node.width + \"px\");\n      // g.append(\"text\")\n      //   .attr(\"x\", node.x + 4)\n      //   .attr(\"y\", node.y + 15)\n      //   .attr(\"class\", \"unselectable\")\n      //   .text(() => node.name)\n      //   .each(function wrap() {\n      //     let self = d3.select(this),\n      //       textLength = self.node().getComputedTextLength(),\n      //       text = self.text();\n      //     while (textLength > node.width - 2 * 4 && text.length > 0) {\n      //       text = text.slice(0, -1);\n      //       self.text(text + \"...\");\n      //       textLength = self.node().getComputedTextLength();\n      //     }\n      // });\n      // title\n      // g.append(\"rect\")\n      //   .attr(\"x\", node.x + node.width * 3 / 8)\n      //   .attr(\"y\", node.y)\n      //   .attr(\"stroke\", borderColor)\n      //   .attr(\"class\", \"title\")\n      //   .style(\"height\", node.height / 2 + \"px\")\n      //   .style(\"fill\", \"#f1f3f4\")\n      //   .style(\"fill\", \"#3F3F3F\")\n      //   .style(\"stroke-width\", \"1px\")\n      //   .style(\"width\", node.width * 5 / 8 + \"px\")\n\n      g.append('foreignObject').attr(\"x\", node.x + node.width * 3 / 8).attr(\"y\", node.y).attr(\"class\", \"title\").style(\"width\", node.width * 5 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\").append('xhtml:div') // .append('p')\n      .style(\"width\", node.width * 5 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\") // .style(\"background-color\", \"red\")\n      .style(\"background-color\", \"#3F3F3F\").style(\"border-radius\", \"0 6px 0 0\").style(\"box-sizing\", \"border-box\") // .style(\"border-top\", \"1px solid #7CF8FD\")\n      // .style(\"border-right\", \"1px solid #7CF8FD\")\n      .style(\"border-top\", \"1px solid white\").style(\"border-right\", \"1px solid white\");\n      g.append('foreignObject').attr(\"x\", node.x + node.width * 3 / 8).attr(\"y\", node.y).attr(\"class\", \"unselectable\").style(\"width\", node.width * 5 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\").style(\"display\", \"table\").append('xhtml:p') // .append('p')\n      .style(\"display\", \"table-cell\").style(\"vertical-align\", \"middle\").style(\"width\", node.width * 5 / 8 + \"px\").style(\"height\", node.height / 2 + \"px\").style(\"box-sizing\", \"border-box\").style(\"padding\", \"4px 8px 4px 8px\").style(\"color\", \"white\").style(\"font-weight\", \"bold\").style(\"margin\", 0) // .style(\"word-wrap\", \"break-word\")\n      .style(\"overflow-wrap\", \"break-word\") // .style(\"color\", \"red\")\n      // .html('test test test   test test testtesttesttesttesttesttesttest')\n      .text(function () {\n        return node.name;\n      }); // Wrap text in a rectangle.\n      // d3plus.textwrap()\n      //   .container(d3.select(\"#rectWrap\"))\n      //   .draw();\n      // let textArray = []\n      // let summary = g.append(\"text\")\n      //   .attr(\"x\", node.x + node.width / 2 + 4)\n      //   .attr(\"y\", node.y + 20)\n      //   .attr(\"class\", \"unselectable\")\n      //   .text(() => node.name)\n      //   .each(function wrap() {\n      //     let self = d3.select(this),\n      //       textLength = self.node().getComputedTextLength(),\n      //       text = self.text();\n      //       console.log('bytes: ' + text.bytes());\n      //       textArray = []\n      //       let slicedText\n      //     while (text.bytes() > 16 && text.length > 0) {\n      //       slicedText = text.slice(0, 16);\n      //       textArray.push(text.slice(0, 16));\n      //       text = text.slice(16);\n      //       console.log('textArray: ' + textArray);\n      //       console.log('textArray.length: ' + textArray.length);\n      //       console.log('text: ' + text);\n      //       // self.text(text + \"...\");\n      //       // textLength = self.node().getComputedTextLength();\n      //     }\n      //     // while (textLength > node.width / 2 - 2 * 4 && text.length > 0) {\n      //     //   text = text.slice(0, -1);\n      //     //   self.text(text + \"...\");\n      //     //   textLength = self.node().getComputedTextLength();\n      //     // }\n      //   }\n      //   ).html(leftLinebreak(textArray))\n      //   // ).html('<foreignObject><p>テスト</p></foreignObject>')\n      //   // summary.html(leftLinebreak(textArray))\n      // body\n      // if (node.id === 3) {\n      //   let body = g.append(\"ellipse\").attr(\"class\", \"body\");\n      //   body.attr(\"cx\", node.x + node.width / 2);\n      //   body.attr(\"cy\", node.y + node.height / 2);\n      //   body.attr(\"rx\", node.width / 2);\n      //   body.attr(\"ry\", node.height / 2);\n      //   body.style(\"fill\", \"white\");\n      //   body.style(\"stroke-width\", \"1px\");\n      //   body.classed(node.thumbnail, true);\n      //   body.attr(\"stroke\", borderColor);\n      // } else {\n      //   let body = g.append(\"rect\").attr(\"class\", \"body\");\n      //   body\n      //     .style(\"width\", node.width + \"px\")\n      //     .style(\"fill\", \"white\")\n      //     .style(\"stroke-width\", \"1px\")\n      //     .style(\"fill\", \"#3F3F3F\")\n      //   // if (node.type !== \"start\" && node.type !== \"end\") {\n      //     body\n      //       .attr(\"x\", node.x)\n      //       .attr(\"y\", node.y + node.height / 2)\n      //       // .style(\"height\", roundTo20(node.height / 2  - 20) + \"px\");\n      //       .style(\"height\", node.height / 2 + \"px\")\n      //   // } else {\n      //     // body\n      //     //   .attr(\"x\", node.x)\n      //     //   .attr(\"y\", node.y)\n      //     //   .classed(node.type, true)\n      //     //   .attr(\"rx\", 30);\n      //     // body.style(\"height\", roundTo20(node.height) + \"px\");\n      //   // }\n      //   body.attr(\"stroke\", borderColor);\n      // // }\n\n      g.append('foreignObject').attr(\"x\", node.x).attr(\"y\", node.y + node.height / 2) // .attr(\"class\", \"body\")\n      .style(\"width\", node.width + \"px\").style(\"height\", node.height / 2 + \"px\").append('xhtml:div') // .append('p')\n      .style(\"width\", node.width + \"px\").style(\"height\", node.height / 2 + \"px\") // .style(\"margin\", 0)\n      .style(\"background-color\", \"#707070\") // .style(\"border-radius\", \"0 4px 0 0\")\n      .style(\"box-sizing\", \"border-box\").style(\"border-radius\", \"0 0 6px 6px\") // .style(\"border-top\", \"3px solid #6A6A6A\")\n      // .style(\"border-bottom\", \"1px solid #7CF8FD\")\n      // .style(\"border-right\", \"1px solid #7CF8FD\")\n      // .style(\"border-left\", \"1px solid #7CF8FD\")\n      .style(\"border-bottom\", \"1px solid white\").style(\"border-right\", \"1px solid white\").style(\"border-left\", \"1px solid white\"); // body text\n      // let text = node.summary\n      // node.type === \"start\"\n      //   ? \"Start\"\n      //   : node.type === \"end\"\n      //   ? \"End\"\n      //   : !node.approvers || node.approvers.length === 0\n      //   ? \"No approver\"\n      //   : node.approvers.length > 1\n      //   ? `${node.approvers[0].name + \"...\"}`\n      //   : node.approvers[0].name;\n      // let bodyTextY;\n      // if (node.type !== \"start\" && node.type !== \"end\") {\n      // if (node.id === 3) {\n      //   bodyTextY = node.y + 25;\n      // } else {\n      // bodyTextY = node.y + 65 + roundTo20(node.height - 20) / 2;\n      // }\n      // } else {\n      //   bodyTextY = node.y + 5 + roundTo20(node.height) / 2;\n      // }\n\n      g.append('foreignObject').attr(\"x\", node.x).attr(\"y\", node.y + node.height / 2).attr(\"class\", \"unselectable\").style(\"width\", node.width + \"px\").style(\"height\", node.height / 2 + \"px\").append('xhtml:p') // .append('p')\n      .style(\"width\", node.width + \"px\").style(\"height\", node.height / 2 + \"px\").style(\"box-sizing\", \"border-box\").style(\"padding\", \"4px 8px 4px 8px\").style(\"color\", \"white\").style(\"margin\", 0) // .style(\"word-wrap\", \"break-word\")\n      .style(\"overflow-wrap\", \"break-word\") // .style(\"color\", \"red\")\n      // .html('test test test   test test testtesttesttesttesttesttesttest')\n      .text(function () {\n        return node.summary;\n      }); // g.append(\"text\")\n      //   .attr(\"x\", node.x + 4)\n      //   // .attr(\"y\", bodyTextY)\n      //   .attr(\"y\", node.y + node.height / 2 + 20)\n      //   .attr(\"class\", \"unselectable\")\n      //   // .attr(\"text-anchor\", \"middle\")\n      //   .text(function () {\n      //     return text;\n      //   })\n      //   .each(function wrap() {\n      //     let self = d3.select(this),\n      //       textLength = self.node().getComputedTextLength(),\n      //       text = self.text();\n      //     while (textLength > node.width - 2 * 4 && text.length > 0) {\n      //       text = text.slice(0, -1);\n      //       self.text(text + \"...\");\n      //       textLength = self.node().getComputedTextLength();\n      //     }\n      //   });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"title\">Flowchart Vue</h1>\n    <!-- <h5 class=\"subtitle\">\n      Flowchart & Flowchart designer component for Vue.js.\n    </h5> -->\n    <div id=\"toolbar\">\n      <button\n        @click=\"\n          $refs.chart.add({\n            id: +new Date(),\n            x: 10,\n            y: 10,\n            thumbnail: 'https://placehold.jp/150x100.png',\n            url: '',\n            name: 'Title',\n            summary: 'Summary',\n          })\n        \"\n      >\n        Add(Double-click canvas)\n      </button>\n      <button @click=\"$refs.chart.remove()\">Delete(Del)</button>\n      <button @click=\"$refs.chart.editCurrent()\">\n        Edit(Double-click node)\n      </button>\n      <button @click=\"$refs.chart.save()\">Save</button>\n    </div>\n    <flowchart\n      :nodes=\"nodes\"\n      :connections=\"connections\"\n      @editnode=\"handleEditNode\"\n      :readonly=\"false\"\n      @dblclick=\"handleDblClick\"\n      @editconnection=\"handleEditConnection\"\n      @save=\"handleChartSave\"\n      ref=\"chart\"\n      :render=\"render\"\n    >\n    </flowchart>\n    <node-dialog\n      :visible.sync=\"nodeDialogVisible\"\n      :node.sync=\"nodeForm.target\"\n    ></node-dialog>\n    <connection-dialog\n      :visible.sync=\"connectionDialogVisible\"\n      :connection.sync=\"connectionForm.target\"\n      :operation=\"connectionForm.operation\"\n    >\n    </connection-dialog>\n  </div>\n</template>\n<!-- <script src=\"//d3plus.org/js/d3.js\"></script>\n<script src=\"//d3plus.org/js/d3plus.js\"></script> -->\n<script>\n/* eslint-disable no-unused-vars */\n\nimport ConnectionDialog from \"../components/ConnectionDialog\";\nimport NodeDialog from \"../components/NodeDialog\";\nimport Flowchart from \"../components/flowchart/Flowchart\";\nimport * as d3 from \"d3\";\nimport { roundTo20 } from \"../utils/math\";\n\nexport default {\n  components: {\n    ConnectionDialog,\n    NodeDialog,\n    Flowchart,\n  },\n  data: function () {\n    return {\n      nodes: [\n        {\n          id: 1,\n          x: 200,\n          y: 50,\n          thumbnail: \"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-1.2.2&w=1200&mark=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D380%26txt%3DDocker%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2582%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2581%25E3%2582%2581%25E3%2581%25A1%25E3%2582%2583%25E3%2581%258F%25E3%2581%25A1%25E3%2582%2583%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D54%26txt-clip%3Dellipsis%26txt-align%3Dcenter%252Cmiddle%26s%3Da74a6782c81bee821aa421a1037a1cc0&mark-align=center%2Cmiddle&blend=https%3A%2F%2Fqiita-user-contents.imgix.net%2F~text%3Fixlib%3Drb-1.2.2%26w%3D840%26h%3D500%26txt%3D%2540SatoshiSobue%26txt-color%3D%2523333%26txt-font%3DHiragino%2520Sans%2520W6%26txt-size%3D45%26txt-align%3Dright%252Cbottom%26s%3Dca9d81597f6bcfd55d58a95dc4c5f445&blend-align=center%2Cmiddle&blend-mode=normal&s=6d406ff15d17893a52ab77ba3ebd9d33\",\n          url: 'https://qiita.com/SatoshiSobue/items/a612ebbb3a9242c09db5',\n          name: \"Dockerとはどういったものなのか、めちゃくちゃ丁寧に説明してみる - Qiita\",\n          summary: \"仮想化などDockerの周辺知識も含めて丁寧に解説されている。\",\n        },\n        {\n          id: 2,\n          x: 200,\n          y: 300,\n          thumbnail: \"https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png\",\n          url: 'https://dev.to/mizuki04/tips-docker-5bfj',\n          name: \"[Tips] 中銀カプセルタワービル=Docker説 - DEV\",\n          summary: \"Dockerの概要が面白い例えで紹介されている。イメージをつかめる。\t\",\n        },\n        // {\n        //   id: 3,\n        //   x: 340,\n        //   y: 130,\n        //   name: \"Custom size\",\n        //   thumbnail: \"operation\",\n        //   approvers: [{ id: 1, name: \"Joyce\" }],\n        //   // width: 120,\n        //   // height: 40,\n        // },\n        {\n          id: 4,\n          x: 50,\n          y: 700,\n          thumbnail: \"https://img-a.udemycdn.com/course/480x270/3207931_c941.jpg\",\n          url: 'https://www.udemy.com/course/aidocker/',\n          name: \"米国AI開発者がゼロから教えるDocker講座\",\n          // approvers: [{ id: 2, name: \"Allen\" }],\n          summary: \"インプットしているだけではわからないので、手を動かして覚える。過去一わかりやすい動画。\t\",\n        },\n        {\n          id: 5,\n          x: 400,\n          y: 700,\n          thumbnail: \"https://i.ytimg.com/vi/Fq1PH0Gwi8I/hqdefault.jpg\",\n          url: 'https://www.youtube.com/watch?v=Fq1PH0Gwi8I',\n          name: \"【rails環境構築】docker + rails + mysql で環境構築（初心者でも30分で完了！）\",\n          // approvers: [{ id: 3, name: \"Teresa\" }],\n          summary: \"無料がいい方はこちら。\t\",\n        },\n      ],\n      connections: [\n        {\n          // positionは矢印がつながっているコネクターの位置っぽい\n          source: { id: 1, position: \"bottom\" },\n          destination: { id: 2, position: \"top\" },\n          id: 1,\n          type: \"pass\",\n          name: \"たとえ話でイメージをつかむ\"\n        },\n        {\n          source: { id: 2, position: \"bottom\" },\n          destination: { id: 4, position: \"top\" },\n          id: 2,\n          type: \"pass\",\n          name: \"実際に手を動かす\"\n        },\n        {\n          source: { id: 2, position: \"bottom\" },\n          destination: { id: 5, position: \"top\" },\n          id: 3,\n          type: \"pass\",\n          name: \"実際に手を動かす\"\n        },\n        // {\n        //   source: { id: 5, position: \"bottom\" },\n        //   destination: { id: 4, position: \"bottom\" },\n        //   id: 4,\n        //   type: \"reject\",\n        // },\n        // {\n        //   source: { id: 1, position: \"top\" },\n        //   destination: { id: 3, position: \"left\" },\n        //   id: 5,\n        //   type: \"pass\",\n        // },\n        // {\n        //   source: { id: 3, position: \"right\" },\n        //   destination: { id: 2, position: \"top\" },\n        //   id: 6,\n        //   type: \"pass\",\n        // },\n      ],\n      nodeForm: { target: null },\n      connectionForm: { target: null, operation: null },\n      nodeDialogVisible: false,\n      connectionDialogVisible: false,\n    };\n  },\n  async mounted() {},\n  methods: {\n    handleDblClick(position) {\n      this.$refs.chart.add({\n        id: +new Date(),\n        x: 10,\n        y: 10,\n        thumbnail: 'https://placehold.jp/150x100.png',\n        url: '',\n        name: 'Title',\n        summary: 'Summary',\n      });\n    },\n    async handleChartSave(nodes, connections) {\n      // axios.post(url, {nodes, connection}).then(resp => {\n      //   this.nodes = resp.nodes;\n      //   this.connections = resp.connections;\n      //   // Flowchart will refresh after this.nodes and this.connections changed\n      // });\n    },\n    handleEditNode(node) {\n      this.nodeForm.target = node;\n      this.nodeDialogVisible = true;\n    },\n    handleEditConnection(connection) {\n      this.connectionForm.target = connection;\n      this.connectionDialogVisible = true;\n    },\n    render: function (g, node, isSelected) {\n      node.width = node.width || 400;\n      node.height = node.height || 200;\n      let borderColor = isSelected ? \"#666666\" : \"#bbbbbb\";\n\n      // // バイト数カウント関数を定義\n      // String.prototype.bytes = function () {\n      //   return(encodeURIComponent(this).replace(/%../g,\"x\").length);\n      // }\n\n      // function leftLinebreak(array){\n      //   let string = \"\";\n      //   array.forEach((t, i) =>{\n      //     string += `<tspan y=\"${i}em\" x=\"0em\">${t}</tspan>`;\n      //     string += `<tspan y=\"${i}em\" x=\"0em\">${t}</tspan>`;\n      //   });\n      //   return string;\n      // }\n\n      // image\n      g.append('foreignObject')\n        .attr(\"x\", node.x)\n        .attr(\"y\", node.y)\n        .style(\"width\", node.width * 3 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .append('xhtml:div')\n        .style(\"width\", node.width * 3 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        // .attr(\"class\", \"imgaaa\")\n        // .style(\"background-image\", \"url('https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\")\n        .style(\"background-image\", `url(${node.thumbnail})`)\n        .style(\"background-position\", \"center center\")\n        .style(\"background-size\", \"cover\")\n        .style(\"background-repeat\", \"no-repeat\")\n        .style(\"border-radius\", \"6px 0 0 0\")\n        .style(\"box-sizing\", \"border-box\")\n        // .style(\"border-top\", \"1px solid #7CF8FD\")\n        // .style(\"border-left\", \"1px solid #7CF8FD\")\n        .style(\"border-top\", \"1px solid white\")\n        .style(\"border-left\", \"1px solid white\")\n        // .style(\"background-color\", \"red\")\n        // .append('img')\n        // .attr('src', 'https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\n        // .style(\"width\", node.width / 2 + \"px\")\n        // .style(\"height\", node.height / 2 + \"px\")\n        // .text(() => node.name)\n\n      // g.append(\"image\")\n      //   .attr(\"x\", node.x)\n      //   .attr(\"y\", node.y)\n      //   .attr('xlink:href', 'https://res.cloudinary.com/practicaldev/image/fetch/s--Zm43GYiy--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/e4jmzv9o1ivd3yz2kj8a.png')\n      //   .attr(\"preserveAspectRatio\", \"none\")\n      //   // .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      //   .style(\"width\", node.width / 2 + \"px\")\n      //   .style(\"height\", node.height / 2 + \"px\")\n\n        //   .attr(\"stroke\", borderColor)\n        //   .attr(\"class\", \"title\")\n        //   .style(\"height\", \"20px\")\n        //   .style(\"fill\", \"#f1f3f4\")\n        //   .style(\"stroke-width\", \"1px\")\n        //   .style(\"width\", node.width + \"px\");\n        // g.append(\"text\")\n        //   .attr(\"x\", node.x + 4)\n        //   .attr(\"y\", node.y + 15)\n        //   .attr(\"class\", \"unselectable\")\n        //   .text(() => node.name)\n        //   .each(function wrap() {\n        //     let self = d3.select(this),\n        //       textLength = self.node().getComputedTextLength(),\n        //       text = self.text();\n        //     while (textLength > node.width - 2 * 4 && text.length > 0) {\n        //       text = text.slice(0, -1);\n        //       self.text(text + \"...\");\n        //       textLength = self.node().getComputedTextLength();\n        //     }\n        // });\n\n      // title\n      // g.append(\"rect\")\n      //   .attr(\"x\", node.x + node.width * 3 / 8)\n      //   .attr(\"y\", node.y)\n      //   .attr(\"stroke\", borderColor)\n      //   .attr(\"class\", \"title\")\n      //   .style(\"height\", node.height / 2 + \"px\")\n      //   .style(\"fill\", \"#f1f3f4\")\n      //   .style(\"fill\", \"#3F3F3F\")\n      //   .style(\"stroke-width\", \"1px\")\n      //   .style(\"width\", node.width * 5 / 8 + \"px\")\n\n      g.append('foreignObject')\n        .attr(\"x\", node.x + node.width * 3 / 8)\n        .attr(\"y\", node.y)\n        .attr(\"class\", \"title\")\n        .style(\"width\", node.width * 5 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .append('xhtml:div')\n        // .append('p')\n        .style(\"width\", node.width * 5 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        // .style(\"background-color\", \"red\")\n        .style(\"background-color\", \"#3F3F3F\")\n        .style(\"border-radius\", \"0 6px 0 0\")\n        .style(\"box-sizing\", \"border-box\")\n        // .style(\"border-top\", \"1px solid #7CF8FD\")\n        // .style(\"border-right\", \"1px solid #7CF8FD\")\n        .style(\"border-top\", \"1px solid white\")\n        .style(\"border-right\", \"1px solid white\")\n\n      g.append('foreignObject')\n        .attr(\"x\", node.x + node.width * 3 / 8)\n        .attr(\"y\", node.y)\n        .attr(\"class\", \"unselectable\")\n        .style(\"width\", node.width * 5 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .style(\"display\", \"table\")\n        .append('xhtml:p')\n        // .append('p')\n        .style(\"display\", \"table-cell\")\n        .style(\"vertical-align\", \"middle\")\n        .style(\"width\", node.width * 5 / 8 + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .style(\"box-sizing\", \"border-box\")\n        .style(\"padding\", \"4px 8px 4px 8px\")\n        .style(\"color\", \"white\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"margin\", 0)\n        // .style(\"word-wrap\", \"break-word\")\n        .style(\"overflow-wrap\", \"break-word\")\n        // .style(\"color\", \"red\")\n        // .html('test test test   test test testtesttesttesttesttesttesttest')\n        .text(() => node.name)\n\n      // Wrap text in a rectangle.\n      // d3plus.textwrap()\n      //   .container(d3.select(\"#rectWrap\"))\n      //   .draw();\n\n      // let textArray = []\n      // let summary = g.append(\"text\")\n      //   .attr(\"x\", node.x + node.width / 2 + 4)\n      //   .attr(\"y\", node.y + 20)\n      //   .attr(\"class\", \"unselectable\")\n      //   .text(() => node.name)\n      //   .each(function wrap() {\n      //     let self = d3.select(this),\n      //       textLength = self.node().getComputedTextLength(),\n      //       text = self.text();\n      //       console.log('bytes: ' + text.bytes());\n      //       textArray = []\n      //       let slicedText\n      //     while (text.bytes() > 16 && text.length > 0) {\n      //       slicedText = text.slice(0, 16);\n      //       textArray.push(text.slice(0, 16));\n      //       text = text.slice(16);\n      //       console.log('textArray: ' + textArray);\n      //       console.log('textArray.length: ' + textArray.length);\n      //       console.log('text: ' + text);\n      //       // self.text(text + \"...\");\n      //       // textLength = self.node().getComputedTextLength();\n      //     }\n      //     // while (textLength > node.width / 2 - 2 * 4 && text.length > 0) {\n      //     //   text = text.slice(0, -1);\n      //     //   self.text(text + \"...\");\n      //     //   textLength = self.node().getComputedTextLength();\n      //     // }\n      //   }\n      //   ).html(leftLinebreak(textArray))\n      //   // ).html('<foreignObject><p>テスト</p></foreignObject>')\n      //   // summary.html(leftLinebreak(textArray))\n\n      // body\n      // if (node.id === 3) {\n      //   let body = g.append(\"ellipse\").attr(\"class\", \"body\");\n      //   body.attr(\"cx\", node.x + node.width / 2);\n      //   body.attr(\"cy\", node.y + node.height / 2);\n      //   body.attr(\"rx\", node.width / 2);\n      //   body.attr(\"ry\", node.height / 2);\n      //   body.style(\"fill\", \"white\");\n      //   body.style(\"stroke-width\", \"1px\");\n      //   body.classed(node.thumbnail, true);\n      //   body.attr(\"stroke\", borderColor);\n      // } else {\n      //   let body = g.append(\"rect\").attr(\"class\", \"body\");\n      //   body\n      //     .style(\"width\", node.width + \"px\")\n      //     .style(\"fill\", \"white\")\n      //     .style(\"stroke-width\", \"1px\")\n      //     .style(\"fill\", \"#3F3F3F\")\n      //   // if (node.type !== \"start\" && node.type !== \"end\") {\n      //     body\n      //       .attr(\"x\", node.x)\n      //       .attr(\"y\", node.y + node.height / 2)\n      //       // .style(\"height\", roundTo20(node.height / 2  - 20) + \"px\");\n      //       .style(\"height\", node.height / 2 + \"px\")\n      //   // } else {\n      //     // body\n      //     //   .attr(\"x\", node.x)\n      //     //   .attr(\"y\", node.y)\n      //     //   .classed(node.type, true)\n      //     //   .attr(\"rx\", 30);\n      //     // body.style(\"height\", roundTo20(node.height) + \"px\");\n      //   // }\n      //   body.attr(\"stroke\", borderColor);\n      // // }\n      g.append('foreignObject')\n        .attr(\"x\", node.x)\n        .attr(\"y\", node.y + node.height / 2)\n        // .attr(\"class\", \"body\")\n        .style(\"width\", node.width + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .append('xhtml:div')\n        // .append('p')\n        .style(\"width\", node.width + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        // .style(\"margin\", 0)\n        .style(\"background-color\", \"#707070\")\n        // .style(\"border-radius\", \"0 4px 0 0\")\n        .style(\"box-sizing\", \"border-box\")\n        .style(\"border-radius\", \"0 0 6px 6px\")\n        // .style(\"border-top\", \"3px solid #6A6A6A\")\n        // .style(\"border-bottom\", \"1px solid #7CF8FD\")\n        // .style(\"border-right\", \"1px solid #7CF8FD\")\n        // .style(\"border-left\", \"1px solid #7CF8FD\")\n        .style(\"border-bottom\", \"1px solid white\")\n        .style(\"border-right\", \"1px solid white\")\n        .style(\"border-left\", \"1px solid white\")\n\n\n      // body text\n      // let text = node.summary\n        // node.type === \"start\"\n        //   ? \"Start\"\n        //   : node.type === \"end\"\n        //   ? \"End\"\n        //   : !node.approvers || node.approvers.length === 0\n        //   ? \"No approver\"\n        //   : node.approvers.length > 1\n        //   ? `${node.approvers[0].name + \"...\"}`\n        //   : node.approvers[0].name;\n      // let bodyTextY;\n      // if (node.type !== \"start\" && node.type !== \"end\") {\n        // if (node.id === 3) {\n        //   bodyTextY = node.y + 25;\n        // } else {\n          // bodyTextY = node.y + 65 + roundTo20(node.height - 20) / 2;\n        // }\n      // } else {\n      //   bodyTextY = node.y + 5 + roundTo20(node.height) / 2;\n      // }\n\n      g.append('foreignObject')\n        .attr(\"x\", node.x)\n        .attr(\"y\", node.y + node.height / 2)\n        .attr(\"class\", \"unselectable\")\n        .style(\"width\", node.width + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .append('xhtml:p')\n        // .append('p')\n        .style(\"width\", node.width + \"px\")\n        .style(\"height\", node.height / 2 + \"px\")\n        .style(\"box-sizing\", \"border-box\")\n        .style(\"padding\", \"4px 8px 4px 8px\")\n        .style(\"color\", \"white\")\n        .style(\"margin\", 0)\n        // .style(\"word-wrap\", \"break-word\")\n        .style(\"overflow-wrap\", \"break-word\")\n        // .style(\"color\", \"red\")\n        // .html('test test test   test test testtesttesttesttesttesttesttest')\n        .text(() => node.summary)\n\n      // g.append(\"text\")\n      //   .attr(\"x\", node.x + 4)\n      //   // .attr(\"y\", bodyTextY)\n      //   .attr(\"y\", node.y + node.height / 2 + 20)\n      //   .attr(\"class\", \"unselectable\")\n      //   // .attr(\"text-anchor\", \"middle\")\n      //   .text(function () {\n      //     return text;\n      //   })\n      //   .each(function wrap() {\n      //     let self = d3.select(this),\n      //       textLength = self.node().getComputedTextLength(),\n      //       text = self.text();\n      //     while (textLength > node.width - 2 * 4 && text.length > 0) {\n      //       text = text.slice(0, -1);\n      //       self.text(text + \"...\");\n      //       textLength = self.node().getComputedTextLength();\n      //     }\n      //   });\n    },\n  },\n};\n</script>\n<style scoped>\n#toolbar {\n  margin-bottom: 10px;\n}\n\n.title {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n\n.subtitle {\n  margin-bottom: 10px;\n}\n\n#toolbar > button {\n  margin-right: 4px;\n}\n\n.container {\n  /* width: 800px; */\n  width: 96%;\n  margin: auto;\n  height: 80vh;\n}\n</style>\n"],"sourceRoot":"src/views"}]}